// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "command": "-extension.vim_ctrl+p",
    "key": "ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "editor.action.triggerSuggest",
    "key": "ctrl+shift+space",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+space",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+i",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "editor.action.rename",
    "key": "ctrl+r",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.rename",
    "key": "f2",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.blockComment",
    "key": "shift+alt+a",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-extension.htmlTagWrap",
    "key": "alt+w",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "ctrl+shift+w"
  },
  {
    "command": "-workbench.action.files.openFile",
    "key": "ctrl+o",
    "when": "true"
  },
  {
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "key": "ctrl+o",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "command": "-workbench.action.files.openFileFolder",
    "key": "ctrl+o",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "command": "-workbench.action.files.openLocalFile",
    "key": "ctrl+o",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "-workbench.action.showAllEditors",
    "key": "ctrl+k ctrl+p"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "ctrl+shift+o",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "command": "-workbench.action.gotoSymbol",
    "key": "ctrl+shift+o",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "command": "-workbench.action.terminal.openDetectedLink",
    "key": "ctrl+shift+o",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "ctrl+shift+o"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+shift+w"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+e"
  },
  {
    "command": "-turboConsoleLog.displayLogMessage",
    "key": "ctrl+alt+l"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "ctrl+shift+c",
    "when": "!terminalFocus"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "ctrl+shift+r",
    "when": "terminal.active"
  },
  {
    "command": "-workbench.action.terminal.toggleTerminal",
    "key": "ctrl+`",
    "when": "terminal.active"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "ctrl+k ctrl+r"
  },
  {
    "command": "-workbench.action.openRecent",
    "key": "ctrl+r"
  },
  {
    "command": "-workbench.action.keybindingsReference",
    "key": "ctrl+k ctrl+r"
  },
  {
    "command": "workbench.action.toggleAuxiliaryBar",
    "key": "ctrl+shift+a"
  },
  {
    "command": "-workbench.action.toggleAuxiliaryBar",
    "key": "ctrl+alt+b"
  },
  {
    "command": "-workbench.action.chat.newChat",
    "key": "ctrl+l",
    "when": "hasChatProvider && inChat"
  },
  {
    "command": "-workbench.action.reopenClosedEditor",
    "key": "ctrl+shift+t"
  },
  {
    "command": "aichat.newchataction",
    "key": "ctrl+shift+t"
  },
  {
    "command": "-aichat.newchataction",
    "key": "ctrl+l"
  },
  {
    "command": "expandLineSelection",
    "key": "ctrl+l",
    "when": "textInputFocus"
  },
  {
    "command": "-expandLineSelection",
    "key": "ctrl+p",
    "when": "textInputFocus"
  },
  {
    "command": "aipopup.action.modal.generate",
    "key": "ctrl+,",
    "when": "editorFocus"
  },
  {
    "command": "-aipopup.action.modal.generate",
    "key": "ctrl+shift+k",
    "when": "editorFocus"
  },
  {
    "command": "-workbench.action.replaceInFiles",
    "key": "ctrl+shift+h"
  },
  {
    "command": "workbench.action.openSettings",
    "key": "ctrl+shift+h"
  },
  {
    "command": "-workbench.action.openSettings",
    "key": "ctrl+,"
  },
  {
    "command": "-breadcrumbs.focusAndSelect",
    "key": "ctrl+shift+.",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "ctrl+shift+.",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "command": "-codeium.openChatView",
    "key": "ctrl+shift+a",
    "when": "true"
  },
  {
    "command": "-notification.acceptPrimaryAction",
    "key": "ctrl+shift+a",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "command": "javascript.removeUnusedImports",
    "key": "ctrl+shift+u"
  },
  {
    "command": "typescript.removeUnusedImports",
    "key": "ctrl+shift+u"
  },
  {
    "command": "-workbench.action.output.toggleOutput",
    "key": "ctrl+shift+u",
    "when": "workbench.panel.output.active"
  },
  {
    "command": "-rust-analyzer.parentModule",
    "key": "ctrl+shift+u",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "command": "workbench.action.experimental.quickTextSearch",
    "key": "ctrl+shift+o"
  },
  {
    "command": "-workbench.action.reloadWindow",
    "key": "ctrl+r",
    "when": "isDevelopment"
  },
  {
    "command": "renameFile",
    "key": "ctrl+r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-renameFile",
    "key": "f2",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "workbench.action.navigateForwardInEditLocations",
    "key": "ctrl+shift+="
  },
  {
    "command": "workbench.action.navigateBackInEditLocations",
    "key": "ctrl+shift+-"
  },
  {
    "command": "-workbench.action.splitEditor",
    "key": "ctrl+\\"
  },
  {
    "command": "workbench.action.moveEditorToNextGroup",
    "key": "ctrl+\\"
  },
  {
    "command": "-workbench.action.moveEditorToNextGroup",
    "key": "ctrl+alt+right"
  },
  {
    "command": "-toggleSuggestionDetails",
    "key": "ctrl+i",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "toggleSuggestionDetails",
    "key": "ctrl+shift+'",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-toggleSuggestionDetails",
    "key": "ctrl+space",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "typescript.goToSourceDefinition",
    "key": "ctrl+shift+d"
  },
  {
    "command": "-workbench.view.debug",
    "key": "ctrl+shift+d",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "ctrl+shift+d",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "f12",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "command": "emojiConsoleLog.addLogMessage",
    "key": "ctrl+shift+c"
  },
  {
    "command": "-emojiConsoleLog.addLogMessage",
    "key": "shift+alt+l"
  },
  {
    "command": "-emojiConsoleLog.commentAllLogMessages",
    "key": "shift+alt+c"
  },
  {
    "command": "-emojiConsoleLog.removeAllLogMessages",
    "key": "shift+alt+d"
  },
  {
    "command": "-emojiConsoleLog.uncommentAllLogMessages",
    "key": "shift+alt+u"
  },
  {
    "command": "workbench.action.files.newUntitledFile",
    "key": "ctrl+t"
  },
  {
    "command": "-workbench.action.files.newUntitledFile",
    "key": "ctrl+n"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "ctrl+t"
  },
  {
    "command": "newFileNow.createNewFile",
    "key": "ctrl+n"
  },
  {
    "command": "-newFileNow.createNewFile",
    "key": "ctrl+alt+n"
  },
  {
    "command": "editor.emmet.action.wrapWithAbbreviation",
    "key": "ctrl+k ctrl+w",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+.",
    "command": "tailwind-fold.toggleAutoFold"
  },
  {
    "key": "ctrl+alt+a",
    "command": "-tailwind-fold.toggleAutoFold"
  }
]